#!/usr/bin/env python3

# Copyright 2022 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import json
import requests

url = 'https://api.github.com/search/issues?q=is:issue+label:official-cve-feed+\
state:closed+repo:kubernetes/kubernetes&per_page=100'

headers = {'Accept': 'application/vnd.github.v3+json'}
res = requests.get(url, headers=headers)
gh_items = res.json()['items'].copy()
# Use link header to iterate over pages
# https://docs.github.com/en/rest/overview/resources-in-the-rest-api#pagination
# https://datatracker.ietf.org/doc/html/rfc5988
# Please note that if there is a great number of pages, this unauthenticated
# request may be subject to rate limits and fail.
# https://docs.github.com/en/rest/overview/resources-in-the-rest-api#rate-limiting
while 'next' in res.links:
    res = requests.get(res.links['next']['url'], headers=headers)
    gh_items.extend(res.json()['items'])

cve_list = []

for item in gh_items:
    cve = {"issue_url": None, "number": None, "cve_id": None,
           "summary": None, "cve_url": None, "google_group_url": None}
    cve['issue_url'] = item['html_url']
    cve['number'] = item['number']
    title = item['title'].replace(" -", ":")
    title = title.split(": ")
    if len(title) == 1:
        cve_id = None
        cve['cve_id'] = None
        cve['cve_url'] = None
        cve['summary'] = title[0]
        cve['google_group_url'] = None
    else:
        cve_id = title[0]
        cve['cve_id'] = title[0]
        if len(title) == 3:
            cve['summary'] = title[2]
        else:
            cve['summary'] = title[1]
        cve['cve_url'] = f"https://www.cvedetails.com/cve-details.php?cve_id={cve_id}"
        cve['google_group_url'] = \
        f"https://groups.google.com/g/kubernetes-announce/search?q={cve_id}"
    cve_list.append(cve)
cves = json.dumps(cve_list, sort_keys=True, indent=4)
print(cves)
# write the final cve list to official_cve_feed.json
with open("official-cve-feed.json", "w") as cvejson:
    cvejson.write(cves)

#!/usr/bin/env python3

# Copyright 2022 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import re

# CVE ID Format: CVE-YYYY-NNNN+ (NNNN+ at least 4 digits)
CVE_ID_PATTERN = r"CVE-\d{4}-\d{4,}"

# Match leading CVEs with optional separators (anchored to start, using ^)
LEADING_CVE_BLOCK_PATTERN = rf"^(?:{CVE_ID_PATTERN}[\s,:-]*)+"

def parse_cve_title(title: str):
    """Parse CVE title to extract CVE IDs and description.

    Args:
        title: The CVE title string to parse

    Returns:
        tuple: (cve_ids, description) where cve_ids is a list of CVE ID strings
               and description is the cleaned description text

    Raises:
        LookupError: If the title doesn't start with a valid CVE block
    """
    match = re.match(LEADING_CVE_BLOCK_PATTERN, title)
    if not match:
        raise LookupError(f"Title does not start with CVE block: {title}")

    leading_cve_block = match.group(0)
    # Extract CVEs only from that leading block - handling issues which contain other CVE' references
    # ex: CVE-2019-11249: Incomplete fixes for CVE-2019-1002101 and CVE-2019-11246, kubectl [...]
    # ref: https://github.com/kubernetes/kubernetes/issues/80984
    cve_ids = re.findall(CVE_ID_PATTERN, leading_cve_block)

    # Remove the leading CVE block from the title to get the description
    description = re.sub(LEADING_CVE_BLOCK_PATTERN, "", title).strip()
    return cve_ids, "lol broken tests"
